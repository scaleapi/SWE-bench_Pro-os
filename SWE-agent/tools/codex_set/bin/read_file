#!/bin/bash
set -euo pipefail

# Parse arguments
PATH_ARG=""
LINE_START=1
LINE_END=20

while [[ $# -gt 0 ]]; do
    case "$1" in
        --path)
            PATH_ARG="$2"
            shift 2
            ;;
        --line_start)
            LINE_START="$2"
            shift 2
            ;;
        --line_end)
            LINE_END="$2"
            shift 2
            ;;
        *)
            echo "Error: Unknown argument $1"
            exit 1
            ;;
    esac
done

# Validate path
if [[ -z "$PATH_ARG" ]]; then
    echo "Error: path argument is required"
    exit 1
fi

# Check if file exists
if [[ ! -f "$PATH_ARG" ]]; then
    echo "Error: File not found: $PATH_ARG"
    exit 1
fi

# Check if it's a directory
if [[ -d "$PATH_ARG" ]]; then
    echo "Error: $PATH_ARG is a directory, not a file"
    exit 1
fi

# Read the file with line numbers
total_lines=$(wc -l < "$PATH_ARG" 2>/dev/null || echo 0)

# Handle empty files
if [[ $total_lines -eq 0 ]]; then
    echo "File is empty"
    exit 0
fi

# Validate line ranges
if [[ $LINE_START -lt 1 ]]; then
    LINE_START=1
fi

if [[ $LINE_END -gt $total_lines ]]; then
    LINE_END=$total_lines
fi

if [[ $LINE_START -gt $LINE_END ]]; then
    echo "Error: line_start ($LINE_START) cannot be greater than line_end ($LINE_END)"
    exit 1
fi

# Output the file with line numbers
sed -n "${LINE_START},${LINE_END}p" "$PATH_ARG" | cat -n | awk '{printf "%4d\t%s\n", NR+'$((LINE_START-1))', $0}' | cut -f1,3-
